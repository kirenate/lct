services:

  ml:
    restart: always
    build:
      context: ml
      dockerfile: Dockerfile
    volumes:
      - ".data:/.data"
    ports:
      - "8081:8080"


  backend:
    restart: always
    build:
      context: .
      dockerfile: backend/Dockerfile
    volumes:
      - ".data:/.data"
      - "./backend/.env:/.env"
      - "/etc/letsencrypt:/etc/letsencrypt"

  nginx:
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
#      - frontend
    volumes:
      - "./nginx/ssl_nginx.conf:/etc/nginx/conf.d/default.conf"
      - "/etc/letsencrypt:/etc/letsencrypt"
      - "/data/letsencrypt:/data/letsencrypt"
      - "./frontend:/frontend"

  minio:
    image: elestio/minio:latest
    restart: always
    dns:
      - 8.8.8.8
    volumes:
      - ./volumes/minio/data:/minio/data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minio-root-user
      - MINIO_ROOT_PASSWORD=minio-root-password
      - MINIO_BROWSER_REDIRECT_URL=https://127.0.0.1:9001
      - MINIO_SERVER_URL=https://127.0.0.1:9000
    command: server --address ":9000" --console-address ":9001" /data

  postgres:
    # image: ankane/pgvector:v0.3.1
    # image: postgis/postgis/13-3.1-alpine
    image: postgres:16.2-alpine3.19
    environment:
      POSTGRES_DB: db_main
      POSTGRES_USER: db_main
      POSTGRES_PASSWORD: db_main
      PGUSER: db_main
      PGPASSWORD: db_main
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      # TODO remove in production
      - "5432:5432"
    labels:
      - "autoheal=true"
    restart: unless-stopped
    volumes:
      - ./extra/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./volumes/pg/:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2.00'
          memory: 4000M
  kafka:
    image: apache/kafka:4.0.1
    environment:
      - KAFKA_NODE_ID=0
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_ADVERTISED_HOST_NAME=127.0.0.1
      - KAFKA_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_MESSAGE_MAX_BYTES=1737418240

    ports:
      - "9094:9094"
      - "9093:9093"
    restart: unless-stopped