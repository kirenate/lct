services:
  backend:
    restart: always
    environment:
      _UVICORN__HOST: "0.0.0.0"
      _UVICORN__PORT: 8000
      _UVICORN__LOG_LEVEL: "DEBUG"
      _REDIS__HOST: "redis"
      _PG__HOST: "postgres"
    build:
      context: backend
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - redis
    volumes:
      - "./backend/.env:/app/.env"
    deploy:
      resources:
        limits:
          cpus: '2.00'
          memory: 10000M

  nginx:
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
      - "443:443"
      - "8000:8000"
    depends_on:
      - backend
    volumes:
      - ./nginx/raw_nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/:/frontend

  minio:
    image: elestio/minio:latest
    restart: always
    dns:
      - 8.8.8.8
    volumes:
      - ./volumes/minio/data:/minio/data
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      - MINIO_ROOT_USER=minio-root-user
      - MINIO_ROOT_PASSWORD=minio-root-password
      - MINIO_BROWSER_REDIRECT_URL=http://127.0.0.1:9001
      - MINIO_SERVER_URL=http://127.0.0.1:9000
    command: server --address ":9000" --console-address ":9001" /data


  mongodb:
    image: mongodb/mongodb-community-server:6.0-ubi8
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
    volumes:
      - type: bind
        source: ./data
        target: /data/db
    ports:
      - "27017:27017"

  autoheal:
    restart: always
    image: willfarrell/autoheal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 100M
